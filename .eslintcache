[{"G:\\work\\Vijay\\demo-project\\src\\index.js":"1","G:\\work\\Vijay\\demo-project\\src\\App.js":"2","G:\\work\\Vijay\\demo-project\\src\\reportWebVitals.js":"3","G:\\work\\Vijay\\demo-project\\src\\routes.js":"4","G:\\work\\Vijay\\demo-project\\src\\Components\\Home\\Home.js":"5","G:\\work\\Vijay\\demo-project\\src\\ApiService.js":"6","G:\\work\\Vijay\\demo-project\\src\\Components\\project-manager\\project-list.js":"7","G:\\work\\Vijay\\demo-project\\src\\Components\\project-manager\\project-manager.js":"8","G:\\work\\Vijay\\demo-project\\src\\containers\\button\\button.js":"9","G:\\work\\Vijay\\demo-project\\src\\Components\\form-manager\\form-manager.js":"10","G:\\work\\Vijay\\demo-project\\src\\Components\\form-manager\\form-list.js":"11","G:\\work\\Vijay\\demo-project\\src\\Components\\questions-manager\\questions-manager.js":"12","G:\\work\\Vijay\\demo-project\\src\\Components\\questions-manager\\questions-list.js":"13"},{"size":620,"mtime":1614663812000,"results":"14","hashOfConfig":"15"},{"size":724,"mtime":1614663812000,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":608,"mtime":1614797379016,"results":"18","hashOfConfig":"15"},{"size":859,"mtime":1614797659449,"results":"19","hashOfConfig":"15"},{"size":4626,"mtime":1614797459294,"results":"20","hashOfConfig":"15"},{"size":2115,"mtime":1614798009801,"results":"21","hashOfConfig":"15"},{"size":10185,"mtime":1614798013076,"results":"22","hashOfConfig":"15"},{"size":618,"mtime":1614792594930,"results":"23","hashOfConfig":"15"},{"size":10173,"mtime":1614798050157,"results":"24","hashOfConfig":"15"},{"size":2074,"mtime":1614798046751,"results":"25","hashOfConfig":"15"},{"size":10200,"mtime":1614797966031,"results":"26","hashOfConfig":"15"},{"size":2150,"mtime":1614797945194,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1mmcbak",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\work\\Vijay\\demo-project\\src\\index.js",[],["58","59"],"G:\\work\\Vijay\\demo-project\\src\\App.js",[],"G:\\work\\Vijay\\demo-project\\src\\reportWebVitals.js",[],"G:\\work\\Vijay\\demo-project\\src\\routes.js",[],"G:\\work\\Vijay\\demo-project\\src\\Components\\Home\\Home.js",[],"G:\\work\\Vijay\\demo-project\\src\\ApiService.js",["60"],"G:\\work\\Vijay\\demo-project\\src\\Components\\project-manager\\project-list.js",["61","62"],"G:\\work\\Vijay\\demo-project\\src\\Components\\project-manager\\project-manager.js",["63"],"import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"../../containers/button/button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport ApiService from '../../ApiService';\r\nimport ProjectList from \"./project-list\";\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  makeStyles,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    marginTop: 150,\r\n    flexGrow: 1,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: \"500\",\r\n  },\r\n});\r\n\r\nexport default function ProjectManager() {\r\n  const classes = useStyles();\r\n  const apiService = new ApiService()\r\n  const [open, setOpen] = React.useState(false);\r\n  const [projectManager, setProjectManager] = useState({});\r\n  const [errors, setError] = useState({});\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleonChange = (e) => {\r\n    let { name, value } = e.target;\r\n    if (name === \"form\") {\r\n      projectManager[name] = e.target.checked;\r\n      setProjectManager({ ...projectManager });\r\n    } else if (name === \"siteAccessData\") {\r\n      projectManager[name] = e.target.checked;\r\n      setProjectManager({ ...projectManager });\r\n    } else if (name === \"lotSize\") {\r\n      projectManager[name] = e.target.checked;\r\n      setProjectManager({ ...projectManager });\r\n    } else {\r\n      setProjectManager((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  const validateForm = () => {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if (!projectManager.projectName) {\r\n      formIsValid = false;\r\n      errors[\"projectName\"] = \"*Please Enter projectName\";\r\n    }\r\n    setError(errors);\r\n    return formIsValid;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    if (validateForm()) {\r\n      try {\r\n        const payload = projectManager;\r\n        const data = await apiService.createProject(payload)\r\n        setProjectManager(\"\");\r\n            handleClose();\r\n      } catch (err) {\r\n        console.log(\"error\", err);\r\n      }\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Card className={classes.root} variant=\"outlined\">\r\n      <div align=\"center\">Projects Manager</div>\r\n        <CardContent>\r\n          <div onClick={handleClickOpen}>\r\n            <Button name={\"Create Project\"} icon />\r\n          </div>\r\n          <TextField\r\n            id=\"filled-required\"\r\n            label=\"Search\"\r\n            autoFocus\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            name=\"projectName\"\r\n            style={{ width: 600 }}\r\n          />\r\n\r\n        </CardContent>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Add Project</DialogTitle>\r\n          <DialogContent>\r\n            <div style={{ flexGrow: 1 }}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                  <div className={classes.title}>\r\n                    Project Name<span style={{ color: \"red\" }}> * </span>\r\n                  </div>\r\n                  <TextField\r\n                    id=\"filled-required\"\r\n                    label=\"Project Name\"\r\n                    autoFocus\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    name=\"projectName\"\r\n                    value={projectManager.projectName}\r\n                    onChange={(e) => handleonChange(e)}\r\n                  />\r\n                  <span style={{ color: \"red\", top: \"5px\", fontSize: \"10px\" }}>\r\n                    {\" \"}\r\n                    {errors[\"projectName\"]}\r\n                  </span>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={3} style={{ alignItems: \"center\" }}>\r\n                <Grid item xs>\r\n                  <div className={classes.title}>Form</div>\r\n                </Grid>\r\n                <Switch\r\n                  name=\"form\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  checked={projectManager.requestedTypeOfDrop}\r\n                  onChange={(e) => handleonChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid container spacing={3} style={{ alignItems: \"center\" }}>\r\n                <Grid item xs>\r\n                  <div className={classes.title}>Site Access Data</div>\r\n                </Grid>\r\n                <Switch\r\n                  name=\"siteAccessData\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  checked={projectManager.siteAccessData}\r\n                  onChange={(e) => handleonChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid container spacing={3} style={{ alignItems: \"center\" }}>\r\n                <Grid item xs>\r\n                  <div className={classes.title}>Lot Size</div>\r\n                </Grid>\r\n                <Switch\r\n                  name=\"lotSize\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  checked={projectManager.lotSize}\r\n                  onChange={(e) => handleonChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid container spacing={3} style={{ alignItems: \"center\" }}>\r\n                <Grid item xs>\r\n                  <div className={classes.title}>Photo Settings</div>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={3} style={{ alignItems: \"center\" }}>\r\n                <Grid item xs></Grid>\r\n                <Grid item xs>\r\n                  <div className={classes.title}>Orientation(Mobile)</div>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <FormControl component=\"fieldset\">\r\n                    <RadioGroup aria-label=\"gender\" name=\"gender1\">\r\n                      <FormControlLabel\r\n                        value=\"portrait\"\r\n                        control={<Radio />}\r\n                        label=\"Portrait\"\r\n                        name=\"Portrait\"\r\n                        checked={projectManager.photoOrientation}\r\n                        onChange={(e) => handleonChange(e)}\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"landscape\"\r\n                        control={<Radio />}\r\n                        label=\"Landscape\"\r\n                        name=\"Landscape\"\r\n                        checked={projectManager.photoOrientation}\r\n                        onChange={(e) => handleonChange(e)}\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={3} style={{ alignItems: \"center\" }}>\r\n                <Grid item xs></Grid>\r\n                <Grid item xs>\r\n                  <div className={classes.title}>Photo Size</div>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    label=\"Age\"\r\n                    name=\"photoSize\"\r\n                    onChange={(e) => handleonChange(e)}\r\n                    value={projectManager.photoSize}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={\"680 X 480\"}>680 X 480</MenuItem>\r\n                    <MenuItem value={\"1280 X 1440\"}>1280 X 1440</MenuItem>\r\n                    <MenuItem value={\"1920 X 1440\"}>1920 X 1440</MenuItem>\r\n                    <MenuItem value={\"2560 X 1920\"}>2560 X 1920</MenuItem>\r\n                  </Select>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container spacing={3} style={{ alignItems: \"center\" }}>\r\n                <Grid item xs></Grid>\r\n                <Grid item xs>\r\n                  <div className={classes.title}>Compression Quality</div>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    label=\"Age\"\r\n                    name=\"compressionQualitys\"\r\n                    onChange={(e) => handleonChange(e)}\r\n                    value={projectManager.compressionQualitys}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={\"0.95\"}>0.95</MenuItem>\r\n                    <MenuItem value={\"0.90\"}>0.90</MenuItem>\r\n                    <MenuItem value={\"0.85\"}>0.85</MenuItem>\r\n                    <MenuItem value={\"0.80\"}>0.80</MenuItem>\r\n                    <MenuItem value={\"0.75\"}>0.75</MenuItem>\r\n                    <MenuItem value={\"0.70\"}>0.70</MenuItem>\r\n                    <MenuItem value={\"0.65\"}>0.65</MenuItem>\r\n                    <MenuItem value={\"0.60\"}>0.60</MenuItem>\r\n                  </Select>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <div onClick={handleClose}>\r\n              <Button color=\"primary\" name={\"Cancel\"} />\r\n            </div>\r\n            <div onClick={handleSubmit}>\r\n              <Button color=\"primary\" name={\"Submit\"} />\r\n            </div>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <ProjectList />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","G:\\work\\Vijay\\demo-project\\src\\containers\\button\\button.js",["64"],"import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\nexport default function (props) {\n  const { name,icon } = props;\n  const classes = useStyles();\n \n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        className={classes.button}\n        startIcon={icon ? <AddIcon /> :null}\n    \n      >\n        {name}\n      </Button>\n    </div>\n  );\n}\n","G:\\work\\Vijay\\demo-project\\src\\Components\\form-manager\\form-manager.js",["65"],"G:\\work\\Vijay\\demo-project\\src\\Components\\form-manager\\form-list.js",["66","67"],"G:\\work\\Vijay\\demo-project\\src\\Components\\questions-manager\\questions-manager.js",["68"],"import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"../../containers/button/button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport ApiService from '../../ApiService';\r\nimport QuestionsList from \"./questions-list\";\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  makeStyles,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    marginTop: 150,\r\n    flexGrow: 1,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: \"500\",\r\n  },\r\n});\r\n\r\nexport default function ProjectManager() {\r\n  const classes = useStyles();\r\n  const apiService = new ApiService()\r\n  const [open, setOpen] = React.useState(false);\r\n  const [projectManager, setProjectManager] = useState({});\r\n  const [errors, setError] = useState({});\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleonChange = (e) => {\r\n    let { name, value } = e.target;\r\n    if (name === \"form\") {\r\n      projectManager[name] = e.target.checked;\r\n      setProjectManager({ ...projectManager });\r\n    } else if (name === \"siteAccessData\") {\r\n      projectManager[name] = e.target.checked;\r\n      setProjectManager({ ...projectManager });\r\n    } else if (name === \"lotSize\") {\r\n      projectManager[name] = e.target.checked;\r\n      setProjectManager({ ...projectManager });\r\n    } else {\r\n      setProjectManager((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  const validateForm = () => {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if (!projectManager.projectName) {\r\n      formIsValid = false;\r\n      errors[\"projectName\"] = \"*Please Enter projectName\";\r\n    }\r\n    setError(errors);\r\n    return formIsValid;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    if (validateForm()) {\r\n      try {\r\n        const payload = projectManager;\r\n        const data = await apiService.createProject(payload)\r\n        setProjectManager(\"\");\r\n            handleClose();\r\n      } catch (err) {\r\n        console.log(\"error\", err);\r\n      }\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Card className={classes.root} variant=\"outlined\">\r\n      <div align=\"center\">Question Manager</div>\r\n        <CardContent>\r\n          <div onClick={handleClickOpen}>\r\n            <Button name={\"Create Project\"} icon />\r\n          </div>\r\n          <TextField\r\n            id=\"filled-required\"\r\n            label=\"Search\"\r\n            autoFocus\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            name=\"projectName\"\r\n            style={{ width: 600 }}\r\n          />\r\n\r\n        </CardContent>\r\n     \r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Add Project</DialogTitle>\r\n          <DialogContent>\r\n            <div style={{ flexGrow: 1 }}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                  <div className={classes.title}>\r\n                    Project Name<span style={{ color: \"red\" }}> * </span>\r\n                  </div>\r\n                  <TextField\r\n                    id=\"filled-required\"\r\n                    label=\"Project Name\"\r\n                    autoFocus\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    name=\"projectName\"\r\n                    value={projectManager.projectName}\r\n                    onChange={(e) => handleonChange(e)}\r\n                  />\r\n                  <span style={{ color: \"red\", top: \"5px\", fontSize: \"10px\" }}>\r\n                    {\" \"}\r\n                    {errors[\"projectName\"]}\r\n                  </span>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={3} style={{ alignItems: \"center\" }}>\r\n                <Grid item xs>\r\n                  <div className={classes.title}>Form</div>\r\n                </Grid>\r\n                <Switch\r\n                  name=\"form\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  checked={projectManager.requestedTypeOfDrop}\r\n                  onChange={(e) => handleonChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid container spacing={3} style={{ alignItems: \"center\" }}>\r\n                <Grid item xs>\r\n                  <div className={classes.title}>Site Access Data</div>\r\n                </Grid>\r\n                <Switch\r\n                  name=\"siteAccessData\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  checked={projectManager.siteAccessData}\r\n                  onChange={(e) => handleonChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid container spacing={3} style={{ alignItems: \"center\" }}>\r\n                <Grid item xs>\r\n                  <div className={classes.title}>Lot Size</div>\r\n                </Grid>\r\n                <Switch\r\n                  name=\"lotSize\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  checked={projectManager.lotSize}\r\n                  onChange={(e) => handleonChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid container spacing={3} style={{ alignItems: \"center\" }}>\r\n                <Grid item xs>\r\n                  <div className={classes.title}>Photo Settings</div>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={3} style={{ alignItems: \"center\" }}>\r\n                <Grid item xs></Grid>\r\n                <Grid item xs>\r\n                  <div className={classes.title}>Orientation(Mobile)</div>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <FormControl component=\"fieldset\">\r\n                    <RadioGroup aria-label=\"gender\" name=\"gender1\">\r\n                      <FormControlLabel\r\n                        value=\"portrait\"\r\n                        control={<Radio />}\r\n                        label=\"Portrait\"\r\n                        name=\"Portrait\"\r\n                        checked={projectManager.photoOrientation}\r\n                        onChange={(e) => handleonChange(e)}\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"landscape\"\r\n                        control={<Radio />}\r\n                        label=\"Landscape\"\r\n                        name=\"Landscape\"\r\n                        checked={projectManager.photoOrientation}\r\n                        onChange={(e) => handleonChange(e)}\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={3} style={{ alignItems: \"center\" }}>\r\n                <Grid item xs></Grid>\r\n                <Grid item xs>\r\n                  <div className={classes.title}>Photo Size</div>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    label=\"Age\"\r\n                    name=\"photoSize\"\r\n                    onChange={(e) => handleonChange(e)}\r\n                    value={projectManager.photoSize}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={\"680 X 480\"}>680 X 480</MenuItem>\r\n                    <MenuItem value={\"1280 X 1440\"}>1280 X 1440</MenuItem>\r\n                    <MenuItem value={\"1920 X 1440\"}>1920 X 1440</MenuItem>\r\n                    <MenuItem value={\"2560 X 1920\"}>2560 X 1920</MenuItem>\r\n                  </Select>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container spacing={3} style={{ alignItems: \"center\" }}>\r\n                <Grid item xs></Grid>\r\n                <Grid item xs>\r\n                  <div className={classes.title}>Compression Quality</div>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    label=\"Age\"\r\n                    name=\"compressionQualitys\"\r\n                    onChange={(e) => handleonChange(e)}\r\n                    value={projectManager.compressionQualitys}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={\"0.95\"}>0.95</MenuItem>\r\n                    <MenuItem value={\"0.90\"}>0.90</MenuItem>\r\n                    <MenuItem value={\"0.85\"}>0.85</MenuItem>\r\n                    <MenuItem value={\"0.80\"}>0.80</MenuItem>\r\n                    <MenuItem value={\"0.75\"}>0.75</MenuItem>\r\n                    <MenuItem value={\"0.70\"}>0.70</MenuItem>\r\n                    <MenuItem value={\"0.65\"}>0.65</MenuItem>\r\n                    <MenuItem value={\"0.60\"}>0.60</MenuItem>\r\n                  </Select>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <div onClick={handleClose}>\r\n              <Button color=\"primary\" name={\"Cancel\"} />\r\n            </div>\r\n            <div onClick={handleSubmit}>\r\n              <Button color=\"primary\" name={\"Submit\"} />\r\n            </div>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <QuestionsList />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","G:\\work\\Vijay\\demo-project\\src\\Components\\questions-manager\\questions-list.js",["69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":7,"nodeType":"77","messageId":"78","endLine":2,"endColumn":10},{"ruleId":"75","severity":1,"message":"79","line":10,"column":8,"nodeType":"77","messageId":"78","endLine":10,"endColumn":18},{"ruleId":"80","severity":1,"message":"81","line":26,"column":4,"nodeType":"82","endLine":26,"endColumn":6,"suggestions":"83"},{"ruleId":"75","severity":1,"message":"84","line":89,"column":15,"nodeType":"77","messageId":"78","endLine":89,"endColumn":19},{"ruleId":"85","severity":1,"message":"86","line":10,"column":1,"nodeType":"87","endLine":28,"endColumn":2},{"ruleId":"75","severity":1,"message":"84","line":89,"column":15,"nodeType":"77","messageId":"78","endLine":89,"endColumn":19},{"ruleId":"75","severity":1,"message":"79","line":10,"column":8,"nodeType":"77","messageId":"78","endLine":10,"endColumn":18},{"ruleId":"80","severity":1,"message":"88","line":25,"column":4,"nodeType":"82","endLine":25,"endColumn":6,"suggestions":"89"},{"ruleId":"75","severity":1,"message":"84","line":89,"column":15,"nodeType":"77","messageId":"78","endLine":89,"endColumn":19},{"ruleId":"75","severity":1,"message":"79","line":10,"column":8,"nodeType":"77","messageId":"78","endLine":10,"endColumn":18},{"ruleId":"80","severity":1,"message":"90","line":26,"column":4,"nodeType":"82","endLine":26,"endColumn":6,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'api' is assigned a value but never used.","Identifier","unusedVar","'DeleteIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProjects'. Either include it or remove the dependency array.","ArrayExpression",["94"],"'data' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'getForms'. Either include it or remove the dependency array.",["95"],"React Hook useEffect has a missing dependency: 'getQuestions'. Either include it or remove the dependency array.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [getProjects]",{"range":"103","text":"104"},"Update the dependencies array to be: [getForms]",{"range":"105","text":"106"},"Update the dependencies array to be: [getQuestions]",{"range":"107","text":"108"},[854,856],"[getProjects]",[843,845],"[getForms]",[859,861],"[getQuestions]"]